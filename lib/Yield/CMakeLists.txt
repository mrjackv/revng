#
# This file is distributed under the MIT License. See LICENSE.md for details.
#

revng_add_analyses_library_internal(
  revngYield
  SHARED
  Assembly/DisassemblyHelper.cpp
  Assembly/HTML.cpp
  Assembly/LLVMDisassemblerInterface.cpp
  Assembly/Plain.cpp
  ControlFlow/Extraction.cpp
  ControlFlow/FallthroughDetection.cpp
  ControlFlow/SVG.cpp
  Internal/Dump.cpp
  Internal/Verify.cpp)

set(DISASSEMBLER_ARCHITECTURE_SUPPORT "")
foreach(CURRENT_ARCHITECTURE AArch64 AMDGPU ARM Mips SystemZ X86)
  set(DISASSEMBLER_ARCHITECTURE_SUPPORT
      ${DISASSEMBLER_ARCHITECTURE_SUPPORT}
      "${CURRENT_ARCHITECTURE}Disassembler" "${CURRENT_ARCHITECTURE}Info"
      "${CURRENT_ARCHITECTURE}Desc")
endforeach(CURRENT_ARCHITECTURE)

llvm_map_components_to_libnames(
  LLVM_LIBRARIES
  Core
  MC
  MCDisassembler
  Support
  Target
  ${DISASSEMBLER_ARCHITECTURE_SUPPORT})

target_link_libraries(revngYield revngEarlyFunctionAnalysis revngModelPasses
                      revngSupport ${LLVM_LIBRARIES})

set(INTERNAL_ASSEMBLY_HEADERS
    "${CMAKE_SOURCE_DIR}/include/revng/Yield/Internal")
target_tuple_tree_generator(
  revngYield
  INSTALL
  HEADER_DIRECTORY
  "Yield/Internal"
  NAMESPACE
  "yield"
  SCHEMA_PATH
  "${CMAKE_BINARY_DIR}/yield-internal-schema.yml"
  SEPARATE_STRING_TYPES
  "MetaAddress"
  HEADERS
  "${INTERNAL_ASSEMBLY_HEADERS}/BasicBlock.h"
  "${INTERNAL_ASSEMBLY_HEADERS}/Function.h"
  "${INTERNAL_ASSEMBLY_HEADERS}/Instruction.h"
  "${INTERNAL_ASSEMBLY_HEADERS}/Tag.h"
  "${INTERNAL_ASSEMBLY_HEADERS}/TagType.h")
